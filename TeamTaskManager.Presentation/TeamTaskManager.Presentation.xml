<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TeamTaskManager.Presentation</name>
    </assembly>
    <members>
        <member name="T:TeamTaskManager.Presentation.Controllers.v1.ApiControllerBase">
            <summary>
            
            </summary>
        </member>
        <member name="M:TeamTaskManager.Presentation.Controllers.v1.ApiControllerBase.ProcessError(Entities.Responses.ApiResponseBase)">
            <summary>
            
            </summary>
            <param name="baseResponse"></param>
            <returns>IActionResult</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:TeamTaskManager.Presentation.Controllers.v1.AuthenticationController.Register(Shared.DTO.RegistrationDto)">
            <summary>
            Registers a new user
            </summary>
            <param name="request">Role is 1 for TeamAdmin, 2 for Member</param>
            <returns></returns>
        </member>
        <member name="M:TeamTaskManager.Presentation.Controllers.v1.AuthenticationController.Login(Shared.DTO.LoginDto)">
            <summary>
            Login a user
            </summary>
            <param name="request"></param>
            <returns>The Access Token</returns>
        </member>
        <member name="M:TeamTaskManager.Presentation.Controllers.v1.TaskController.Update(System.Guid,Shared.DTO.TaskUpdateDto)">
            <summary>
            Updates task details
            </summary>
            <param name="taskId"></param>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:TeamTaskManager.Presentation.Controllers.v1.TaskController.Deprecate(System.Guid)">
            <summary>
            Deprecates a task record
            </summary>
            <param name="taskId"></param>
            <returns></returns>
        </member>
        <member name="M:TeamTaskManager.Presentation.Controllers.v1.TaskController.UpdateStatus(System.Guid,Shared.DTO.TaskStatusDto)">
            <summary>
            Update task status. 0 - Pending, 1 - In Progress, 2 - Completed
            </summary>
            <param name="taskId"></param>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:TeamTaskManager.Presentation.Controllers.v1.TeamController.Create(Shared.DTO.CreateTeamDto)">
            <summary>
            Creates a Team.
            Only a User on the Team Admin role can access this endpoint
            This action will add the team creator as a default member of the team.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:TeamTaskManager.Presentation.Controllers.v1.TeamController.Invite(System.Guid,Shared.DTO.TeamInvitaionDto)">
            <summary>
            Invite users to the team.
            Only a team member can invite a user to the team
            </summary>
            <param name="teamId"></param>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:TeamTaskManager.Presentation.Controllers.v1.TeamController.GetTeamTasks(System.Guid)">
            <summary>
            Gets team tasks
            </summary>
            <param name="teamId"></param>
            <returns></returns>
        </member>
        <member name="M:TeamTaskManager.Presentation.Controllers.v1.TeamController.CreateTasks(System.Guid,System.Collections.Generic.List{Shared.DTO.TaskCreateDto})">
            <summary>
            Create one or more task
            </summary>
            <param name="teamId"></param>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:TeamTaskManager.Presentation.Controllers.v1.UserController.GetLoggedInUserDetails">
            <summary>
            Get loggedin user details
            </summary>
            <returns>User details</returns>
        </member>
        <member name="M:TeamTaskManager.Presentation.Controllers.v1.UserController.GetAll">
            <summary>
            Get all users. Not part of the requirements, 
            but this was added to ease the use of other endpoints like inviting users to a team
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
